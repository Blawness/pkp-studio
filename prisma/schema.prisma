
datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

model Certificate {
  id                  String   @id @default(cuid())
  kode                String
  nama_pemegang       Json
  surat_hak           String
  no_sertifikat       String   @unique
  lokasi_tanah        String   @db.Text
  luas_m2             Int
  tgl_terbit          DateTime
  surat_ukur          String
  nib                 String   @unique
  pendaftaran_pertama DateTime
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model User {
  id         String       @id @default(cuid())
  name       String
  email      String       @unique
  password   String
  role       String       @default("user")
  createdAt  DateTime     @default(now())
  attendance Attendance[]

}

model ActivityLog {
  id        String   @id @default(cuid())
  user      String
  action    String
  details   String
  timestamp DateTime @default(now())
  payload   Json?
}

model TanahGarapanEntry {
  id                            String   @id @default(cuid())
  letakTanah                    String
  namaPemegangHak               String
  letterC                       String
  nomorSuratKeteranganGarapan   String
  luas                          Int
  keterangan                    String?  @db.Text
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime @updatedAt
}

model Attendance {
  id        String    @id @default(cuid())
  date      DateTime  @db.Date
  checkIn   DateTime  @map("check_in")
  checkOut  DateTime? @map("check_out")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@unique([userId, date])
  @@map("attendance")
}
